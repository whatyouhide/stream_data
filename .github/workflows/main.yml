name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    name: Test (Elixir ${{ matrix.elixir }} | Erlang/OTP ${{ matrix.otp }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - otp: "27.2"
            elixir: "1.18"
            os: ubuntu-latest
            lint: true
            coverage: true
            dialyzer: true

          # Technically supports down to OTP 23 (as that's what Elixir 1.14 supports),
          # but on CI it's easier to use OTP 24.
          - otp: "24.3"
            elixir: "1.14"
            os: ubuntu-20.04

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      MIX_ENV: test

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install OTP and Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
          version-type: strict

      - name: Install dependencies
        run: mix deps.get --only test

      - name: Check for formatted code
        if: ${{ matrix.lint }}
        run: mix format --check-formatted

      - name: Cache/uncache PLTs
        uses: actions/cache@v4
        with:
          path: |
            priv/plts
          key: "${{ runner.os }}-\
            erlang-${{ matrix.otp }}-\
            elixir-${{ matrix.elixir }}-\
            ${{ hashFiles('mix.lock') }}"

      - name: Run Dialyzer
        if: ${{ matrix.dialyzer }}
        run: mix dialyzer

      - name: Check for unused/unlocked dependencies
        if: ${{ matrix.lint }}
        run: mix do deps.get + deps.unlock --check-unused + deps.get --check-locked

      - name: Check for compilation warnings
        if: ${{ matrix.lint }}
        run: mix compile --warnings-as-errors

      - name: Run tests
        run: mix test
        if: ${{ !matrix.coverage }}

      - name: Run tests with coverage
        run: mix coveralls.github
        if: ${{ matrix.coverage }}
